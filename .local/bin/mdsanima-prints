#!/usr/bin/env bash

# Copyright (c) 2023-2024 MDSANIMA DEV. All rights reserved.
# Licensed under the MIT license.

# This is a script for printing text in colors with a fancy way in the terminal.
# Should be used only in shell script not in terminal directly.


# Arguments:
#     -fg <color>  Foreground color number or name, optional, default to none
#     -bg <color>  Background color number or name, optional, default to none
#     -nonewline   Don't print a new line after text, optional, default to false
#     <text>       Text to be printed in colors
#
# Usage:
#     source mdsanima-prints && source mdsanima-colors
#     __mds_color_print -fg <color> -bg <color> -nonewline <text>
#     __mds_color_print -fg 196 -bg 255 "red text on white background"
#     __mds_color_print -fg RED -bg WHITE "red text on white background"
#
# Printing text in colors
function __mds_color_print() {
    local fg_color
    local bg_color
    local no_newline=false
    local text

    while [[ $# -gt 0 ]]; do
        case "$1" in
            -fg)
                fg_color="$2"
                shift 2
                ;;
            -bg)
                bg_color="$2"
                shift 2
                ;;
            -nonewline)
                no_newline=true
                shift 1
                ;;
            *)
                if [ -z "$text" ]; then
                    text="$1"
                else
                    echo "Unrecognized argument: $1" >&2
                    return 1
                fi
                shift 1
                ;;
        esac
    done

    if [ -z "$text" ]; then
        echo "No text specified for coloring" >&2
        return 1
    fi

    local fg_code
    local bg_code
    local reset_code="\x1b[0m"

    if [[ "$fg_color" =~ ^[0-9]+$ ]]; then
        fg_code="\x1b[38;5;${fg_color}m"
    elif [[ -v "$fg_color" ]]; then
        fg_code="\x1b[38;5;${!fg_color}m"
    fi

    if [[ "$bg_color" =~ ^[0-9]+$ ]]; then
        bg_code="\x1b[48;5;${bg_color}m"
    elif [[ -v "$bg_color" ]]; then
        bg_code="\x1b[48;5;${!bg_color}m"
    fi

    if [[ "$no_newline" == true ]]; then
        echo -e -n "${fg_code}${bg_code}${text}${reset_code}"
    else
        echo -e "${fg_code}${bg_code}${text}${reset_code}"
    fi
}
